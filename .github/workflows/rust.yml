name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build
      run: |
        cargo build --verbose
        tar -czvf artifact.tar.gz target
    - name: Run tests
      run: cargo test --verbose
    - uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: artifact.tar.gz
        retention-days: 1
  pre-benchmark:
    needs: build
    runs-on: ubuntu-latest
    outputs: 
      matrix: ${{ steps.set-days-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-days-matrix
        run: |
          matrix=`ls input/2021/ | sed -r 's/day([0-9]+).*/\1/g' | jq -sc '.'`
          echo "${matrix}"
          echo "::set-output name=matrix::${matrix}"
  benchmark:
    needs: pre-benchmark
    runs-on: ubuntu-latest
    strategy:
      matrix:
        part: [1, 2]
        day: [1] #${{ fromJSON(needs.pre-benchmark.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/download-artifact@v2
        with:
          name: build-artifact
      - name: unpack build artifact
        run: tar -xzvf artifact.tar.gz
      - name: Install AoC client
        run: cargo install cargo-aoc || true
      - name: Benchmark Day ${{ matrix.day }} Part ${{ matrix.part }}
        id: benchmark
        run: |
          cargo aoc bench -d ${{ matrix.day }} -p ${{ matrix.part }}
          runtime=`cat target/aoc/aoc-autobench/target/criterion/Day${{ matrix.day }}\ -\ Part${{ matrix.part }}/\(default\)/base/estimates.json | jq -r '.Mean.point_estimate'`
          echo "::set-output name=time::${runtime}"
      - name: Create Awesome Badge
        uses: schneegans/dynamic-badges-action@v1.1.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: a054aa6c1453da6f3126d12b4d59ff59
          filename: benchmark-aoc-2021-day-${{ matrix.day }}-part-${{ matrix.part }}.json
          label: runtime
          message: ${{ steps.benchmark.outputs.time }}
          color: informational
